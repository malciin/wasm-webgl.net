<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension="gen.cs" #>
<#

var content = File.ReadAllText(Host.ResolvePath("webgl.spec.xml"));
using var memStream = new MemoryStream(Encoding.UTF8.GetBytes(content));
var xmlDocument = XDocument.Load(memStream);

#>
using System.Runtime.InteropServices.JavaScript;

namespace WasmWebGL;

/// <summary>
/// Generated by WebGL.tt at <#= DateTime.UtcNow.ToString("yyyy-MM-dd HH:mm:ss") + " UTC" #>
/// Bindings are generated based on specification from webgl.spec.xml
/// </summary>
public static partial class WebGL
{
<#
foreach (var method in xmlDocument.Root.Element("methods").Descendants("method"))
{
	var methodName = method.Attribute("name").Value;
#>
	[JSImport("<#= methodName #>", "webgl-bindings.js")]
	public static partial <#= method.Attribute("return")?.Value ?? "void" #> <#= methodName #>(<#=
		
		string.Join(", ", method
			.Descendants("param")
			.Select(x => x.Attribute("type").Value + " " + x.Attribute("name").Value))
	#>);

<# } #>
<# foreach (var constant in xmlDocument.Root.Element("constants").Descendants("constant")) { #>
	public const int <#= constant.Attribute("name").Value #> = <#= constant.Attribute("value").Value #>;
<# } #>
}
